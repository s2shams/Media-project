{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "8e5e8d63-4bb7-4d4e-8eee-b289178867b9",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd   \n",
    "import requests       \n",
    "from bs4 import BeautifulSoup \n",
    "import numpy as np  \n",
    "\n",
    "movie_name = []\n",
    "genre = []\n",
    "rating = []\n",
    "description = []\n",
    "\n",
    "\n",
    "i = 0\n",
    "url = 'https://www.imdb.com/search/title/?title_type=tv_movie,tv_series&count=100&ref_=adv_prv'\n",
    "while i < 300:\n",
    "    response = requests.get(url)\n",
    "    soup = BeautifulSoup(response.content, 'html.parser')\n",
    "    movie_data = soup.findAll('div', attrs= {'class': 'lister-item mode-advanced'})\n",
    "    \n",
    "    for store in movie_data:\n",
    "        name = store.h3.a.text\n",
    "        movie_name.append(name)\n",
    "\n",
    "        rate = store.find('div', class_ = 'inline-block ratings-imdb-rating').text.replace('\\n', '') if store.find('div', class_ = 'inline-block ratings-imdb-rating') else 'null'\n",
    "        rating.append(rate)\n",
    "\n",
    "        describe = store.find_all('p', class_ = 'text-muted')\n",
    "        description_ = describe[1].text.replace('\\n', '') if len(describe) >1 else '*****'\n",
    "        description.append(description_)\n",
    "        \n",
    "        genre_tag = store.find('p', class_='text-muted').find('span', class_='genre').text.strip() if store.find('span', class_='genre') else 'null'\n",
    "        genre.append(genre_tag)\n",
    "        \n",
    "    url = 'https://www.imdb.com' + soup.find('div', class_='desc').find('a', class_='lister-page-next next-page')['href']\n",
    "    i += 1\n",
    "        \n",
    "        \n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "9881dcd6-8bf2-482b-930a-d62380e5fa6d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "300"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "i"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "3e751e36-0603-4a6d-ab42-6899fb24e127",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.DataFrame({'title': movie_name, 'genre': genre, 'score': rating, 'synopsis': description})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ddade99a-ceac-430d-aa20-f2a0a2e48434",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>genre</th>\n",
       "      <th>score</th>\n",
       "      <th>synopsis</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>The Last of Us</td>\n",
       "      <td>Action, Adventure, Drama</td>\n",
       "      <td>9.1</td>\n",
       "      <td>After a global pandemic destroys civilization,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>You</td>\n",
       "      <td>Crime, Drama, Romance</td>\n",
       "      <td>7.7</td>\n",
       "      <td>A dangerously charming, intensely obsessive yo...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Outer Banks</td>\n",
       "      <td>Action, Crime, Drama</td>\n",
       "      <td>7.6</td>\n",
       "      <td>On an island of haves and have-nots, teen John...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1923</td>\n",
       "      <td>Drama, Western</td>\n",
       "      <td>8.5</td>\n",
       "      <td>The Duttons face a new set of challenges in th...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Poker Face</td>\n",
       "      <td>Crime, Drama, Mystery</td>\n",
       "      <td>8.0</td>\n",
       "      <td>Charlie has an extraordinary ability to determ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29995</th>\n",
       "      <td>Tian shen zhuan</td>\n",
       "      <td>Comedy</td>\n",
       "      <td>6.2</td>\n",
       "      <td>Add a Plot</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29996</th>\n",
       "      <td>The March Sisters at Christmas</td>\n",
       "      <td>Comedy, Family, Romance</td>\n",
       "      <td>5.4</td>\n",
       "      <td>To keep the family home from being sold, the f...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29997</th>\n",
       "      <td>Country Matters</td>\n",
       "      <td>Drama</td>\n",
       "      <td>7.5</td>\n",
       "      <td>The story of people living in the countryside ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29998</th>\n",
       "      <td>Whistle and I'll Come to You</td>\n",
       "      <td>Horror</td>\n",
       "      <td>6.5</td>\n",
       "      <td>After finding an intriguing ring on a deserted...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29999</th>\n",
       "      <td>Justice for Annie: A Moment of Truth Movie</td>\n",
       "      <td>Drama, Thriller</td>\n",
       "      <td>5.8</td>\n",
       "      <td>A woman discovers that the accidental death of...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>30000 rows Ã— 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                            title                     genre  \\\n",
       "0                                  The Last of Us  Action, Adventure, Drama   \n",
       "1                                             You     Crime, Drama, Romance   \n",
       "2                                     Outer Banks      Action, Crime, Drama   \n",
       "3                                            1923            Drama, Western   \n",
       "4                                      Poker Face     Crime, Drama, Mystery   \n",
       "...                                           ...                       ...   \n",
       "29995                             Tian shen zhuan                    Comedy   \n",
       "29996              The March Sisters at Christmas   Comedy, Family, Romance   \n",
       "29997                             Country Matters                     Drama   \n",
       "29998                Whistle and I'll Come to You                    Horror   \n",
       "29999  Justice for Annie: A Moment of Truth Movie           Drama, Thriller   \n",
       "\n",
       "      score                                           synopsis  \n",
       "0       9.1  After a global pandemic destroys civilization,...  \n",
       "1       7.7  A dangerously charming, intensely obsessive yo...  \n",
       "2       7.6  On an island of haves and have-nots, teen John...  \n",
       "3       8.5  The Duttons face a new set of challenges in th...  \n",
       "4       8.0  Charlie has an extraordinary ability to determ...  \n",
       "...     ...                                                ...  \n",
       "29995   6.2                                         Add a Plot  \n",
       "29996   5.4  To keep the family home from being sold, the f...  \n",
       "29997   7.5  The story of people living in the countryside ...  \n",
       "29998   6.5  After finding an intriguing ring on a deserted...  \n",
       "29999   5.8  A woman discovers that the accidental death of...  \n",
       "\n",
       "[30000 rows x 4 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a524ff58-4f0e-4c53-9eab-782ae7c32512",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'https://www.imdb.com/search/title/?title_type=tv_movie,tv_series&count=100&after=WzExMTk4NCwxMTE5ODQsInR0MDExNjczNSIsMzAwMDFd'"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "url"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "9edfce4e-9676-48bb-b4a0-148ebee1cde3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "title       object\n",
       "genre       object\n",
       "score       object\n",
       "synopsis    object\n",
       "dtype: object"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "d5b866c4-9983-4ac2-b0bf-2fc1dc9a1a65",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "title       0\n",
       "genre       0\n",
       "score       0\n",
       "synopsis    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "b071d412-6158-4cd9-9c1d-c75629ddf5a2",
   "metadata": {},
   "outputs": [],
   "source": [
    "count = df[df['score'] == 'null'].shape[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "9be4fbaf-0141-430b-bf95-e355d4e18e98",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1629"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "c1e62964-4e25-4d2e-87bf-97c68a031589",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.to_csv('imdb', index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "325a94fb-0dd1-4078-985c-5343de9bd3fb",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
